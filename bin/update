#!/bin/bash

function command_exists () { hash "$1" 2>&- ; }

if command_exists brew; then
    bp=$(brew --prefix)

    echo "Updating Homebrew..."
    brew update
    brew upgrade
    brew cleanup -s

    bp=$(brew --prefix)
    if [ -f $bp/bin/cask ]; then
        brew cask cleanup
    fi
fi

if command_exists gcloud; then
    echo "Updating gcloud..."
    yes | gcloud components update
fi

if command_exists go; then
    echo "Updating go tools..."
    go get -u all
    # go get -u \
    #     golang.org/x/tools/cmd/{benchcmp,callgraph,cover,digraph,eg,fiximports} \
    #     golang.org/x/tools/cmd/{godex,godoc,goimports,gomvpkg,gorename,gotype} \
    #     golang.org/x/tools/cmd/{present,ssadump,stress,stringer} \
    #     # golang.org/x/tools/cmd/{vet,vet/whitelist} \
    #     # golang.org/x/mobile/cmd/gomobile \
    #     github.com/golang/lint/golint \
    #     github.com/ajstarks/svgo/tree/master/benchviz \
    #     github.com/cespare/prettybench \
    #     github.com/davecheney/gcvis \
    #     github.com/derekparker/delve/cmd/dlv \
    #     github.com/fzipp/pythia \
    #     github.com/gopherjs/gopherjs \
    #     github.com/jingweno/nut \
    #     github.com/josharian/impl \
    #     github.com/jstemmer/gotags \
    #     github.com/kisielk/errcheck \
    #     github.com/nsf/gocode \
    #     github.com/opennota/check/cmd/{aligncheck,structcheck,varcheck} \
    #     github.com/rogpeppe/godef \
    #     github.com/skelterjohn/wgo \
    #     github.com/tools/godep \
    #     rsc.io/{benchstat,grepdiff,gt,pprof_mac_fix,sizeof} \
    #     # golang.org/x/tools/cmd/{gobind,tipgodoc} \
    #     # github.com/motemen/gore \
    #     # rsc.io/grind \
    #     \

    # go get -u all
    gometalinter --install --update
fi

# if command_exists npm; then
#     echo "Updating npm..."
#     npm update -g
# fi

if command_exists pip; then
    echo "Updating pip..."
    pip install --user --upgrade distribute
    pip install --user --upgrade pip
    pip install --user --upgrade $(pip freeze | cut -d '=' -f 1)
    # pip install -U `pip list --format=legacy | awk '{print $1}' | grep -v thor`
fi

if [[ -f ~/Code/powerline-shell/powerline-shell.py ]] ; then
    echo "Updating powerline-shell..."
    cd ~/Code/powerline-shell; git pull; cd - > /dev/null
fi

if command_exists rustup; then
    echo "Updating rustup..."
    rustup self update
    rustup update
fi

if command_exists vim; then
    echo "Updating vim..."
    vim +PluginInstall! +PluginClean +qall
fi
